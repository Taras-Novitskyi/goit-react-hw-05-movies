{"version":3,"file":"static/js/705.dc75d383.chunk.js","mappings":"qQAEaA,EAAYC,EAAAA,GAAAA,IAAH,sPAcTC,EAAaD,EAAAA,GAAAA,KAAH,8KAUVE,EAAYF,EAAAA,GAAAA,OAAH,oRAeTG,EAAQH,EAAAA,GAAAA,MAAH,6W,SC9BX,SAASI,EAAT,GAAqC,IAAhBC,EAAe,EAAfA,aAC1B,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAkBA,OACE,SAACT,EAAD,WACE,UAACE,EAAD,CAAYQ,SAdK,SAAAC,GACnBA,EAAMC,iBAEqB,KAAvBJ,EAAYK,QACdC,EAAAA,GAAAA,MAAY,2BAGdR,EAAaE,GACbC,EAAe,IACfE,EAAMI,cAAcC,OACrB,EAIG,WACE,SAACZ,EAAD,CACEa,KAAK,OACLC,aAAa,MACbC,KAAK,QACLC,WAAS,EACTC,YAAY,gBACZC,SAzBmB,SAAAX,GACzBF,EAAeE,EAAMI,cAAcQ,MAAMC,cAC1C,KAyBK,SAACrB,EAAD,CAAWc,KAAK,SAAhB,UACE,SAAC,MAAD,UAKT,C,2GC5CYQ,EAAcxB,EAAAA,GAAAA,GAAH,oOAWXyB,EAAOzB,EAAAA,GAAAA,GAAH,gMAYJ0B,GAAO1B,EAAAA,EAAAA,IAAO2B,EAAAA,GAAP3B,CAAH,kD,UCdJ4B,EAAgB,SAAC,GAAuC,IAArCrB,EAAoC,EAApCA,YAAasB,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,WACjD,GAA4BxB,EAAAA,EAAAA,UAAS,MAArC,eAAOyB,EAAP,KAAeC,EAAf,KACA,GAAsC1B,EAAAA,EAAAA,UAAS,GAA/C,eAAO2B,EAAP,KAAoBC,EAApB,KACA,GAA4B5B,EAAAA,EAAAA,WAAS,GAArC,eAAO6B,EAAP,KAAeC,EAAf,KACA,GAA0C9B,EAAAA,EAAAA,WAAS,GAAnD,eAAO+B,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,EAAAA,EAAAA,MAsDjB,IApDAC,EAAAA,EAAAA,YAAU,WACRH,GAAiB,EAClB,GAAE,CAAC/B,KAEJkC,EAAAA,EAAAA,YAAU,WACR,GAAoB,KAAhBlC,EAIF,OAHA+B,GAAiB,GACjBJ,EAAe,QACfF,EAAU,MAJE,wCAQd,wGAEII,GAAU,GAFd,UAG6CM,EAAAA,EAAAA,IACvCnC,EACAsB,GALN,mBAGYc,EAHZ,EAGYA,QAASC,EAHrB,EAGqBA,cAKM,IAAnBD,EAAQE,OARhB,wBASMhC,EAAAA,GAAAA,MAAY,qCAEZyB,GAAiB,GACjBJ,EAAe,GACfF,EAAU,MAbhB,8BAiBiB,IAATH,EAjBR,wBAkBMG,GAAU,SAAAc,GAAK,wBAAQA,IAAR,OAAkBH,GAAlB,IACfL,GAAiB,GAEjBS,YAAW,YACTC,EAAAA,EAAAA,IACD,GAAE,KAvBT,2BA2BIhB,EAAUW,GACVT,EAAeU,GACfN,GAAiB,GA7BrB,kDA+BIW,QAAQC,IAAR,MA/BJ,yBAiCId,GAAU,GAjCd,8EARc,0DA6Cde,EACD,GAAE,CAACtB,EAAMtB,IAEK,OAAXwB,EACF,OAAO,KAGT,IAAMqB,EAAaC,KAAKC,KAAKrB,EAAc,IAE3C,MAAoB,KAAhB1B,GAEA,SAACgD,EAAA,EAAD,CAAKC,QAAQ,OAAOC,eAAe,SAASC,GAAG,KAA/C,gDAOF,gCACGrB,IACC,UAACkB,EAAA,EAAD,CAAKC,QAAQ,OAAOG,cAAc,SAASF,eAAe,SAA1D,WACE,SAACjC,EAAD,UACGO,EAAO6B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACV,SAACtC,EAAD,WACE,SAACC,EAAD,CAAMsC,GAAE,UAAKH,GAAMf,MAAO,CAAEmB,KAAM1B,GAAlC,UACE,SAAC2B,EAAA,EAAD,CAAgBL,GAAIA,EAAIC,MAAOA,EAAOK,OAAQJ,OAFvCF,EADD,MAQb5B,EAAc,IAAMmB,IAAevB,IAASM,IAC3C,SAACiC,EAAA,EAAD,CAAQC,KAAK,YAAYC,QAASxC,OAIvCK,IAAU,SAACoC,EAAA,EAAD,MAGhB,ECnED,EAlCe,WAAO,IAAD,EACnB,GAA0BjE,EAAAA,EAAAA,UAAS,IAAnC,eAAOkE,EAAP,KAAcC,EAAd,KACA,GAAsCnE,EAAAA,EAAAA,UAAS,GAA/C,eAAOoE,EAAP,KAAoBC,EAApB,KACE,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACIC,EAAS,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,IAE5CvC,EAAAA,EAAAA,YAAU,WACPgC,EAASM,EACV,GAAE,CAACA,IAcR,OACE,4BACE,SAAC3E,EAAD,CAAWC,aAdU,SAAAE,GACvBkE,EAASlE,GACToE,EAAe,GAGfG,EADmC,KAAhBvE,EAAqB,CAAEiE,MAAOjE,GAAgB,CAAC,EAEnE,KASG,SAACqB,EAAD,CACErB,YAAaiE,EACb3C,KAAM6C,EACN5C,WAVa,WACjB6C,GAAe,SAAA7B,GAAK,OAAIA,EAAQ,CAAZ,GACrB,MAYF,C","sources":["components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","components/SearchGallery/SearchGallery.styled.js","components/SearchGallery/SearchGallery.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  padding-top: 16px;\n  padding-bottom: 16px;\n  background-color: rgb(243, 241, 241);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const SearchBtn = styled.button`\n  display: inline-block;\n  width: 42px;\n  height: 42px;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  border: solid 2px rgba(0, 0, 0, 0.14);\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  height: 42px;\n  font: inherit;\n  font-size: 18px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  border: solid 2px rgba(0, 0, 0, 0.14);\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2)\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import { BsSearch } from 'react-icons/bs';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport {\n  Container,\n  SearchForm,\n  SearchBtn,\n  Input,\n} from './Searchbar.styled';\n\nexport function Searchbar({ onFormSubmit}) {\n  const [searchMovie, setSearchMovie] = useState('');\n\n  const handleSearchChange = event => {\n    setSearchMovie(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    \n    if (searchMovie.trim() === '') {\n      toast.error('Enter your search query');\n    }\n\n    onFormSubmit(searchMovie);\n    setSearchMovie('');\n    event.currentTarget.reset();\n  };\n\n  return (\n    <Container>\n      <SearchForm onSubmit={handleSubmit}>\n        <Input\n          type=\"text\"\n          autocomplete=\"off\"\n          name=\"input\"\n          autoFocus\n          placeholder=\"Search movies\"\n          onChange={handleSearchChange}\n        />\n        <SearchBtn type=\"submit\">\n          <BsSearch />\n        </SearchBtn>\n      </SearchForm>\n    </Container>\n  );\n};\n\nSearchbar.propTypes = {\n  onFormSubmit: PropTypes.func.isRequired,\n};\n","import styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\n\nexport const GalleryList = styled.ul`\n  padding: 20px 20px;\n  margin: 0;\n  display: grid;\n  justify-content: center;\n  align-items: center;\n  grid-template-columns: auto auto auto;\n  gap: 32px;\n  background-color: rgb(243, 241, 241);\n`;\n\nexport const Item = styled.li`\n  list-style: none;\n  cursor: pointer;\n  width: 200px;\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 0 11px rgba(33, 33, 33, 0.2);\n    transform: scale(1.01);\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  text-decoration: none;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { toast } from 'react-toastify';\nimport { fetchSearchFilms } from '../../services/fetchApi';\nimport { makeSmoothScroll } from 'services/makeSmoothScroll';\nimport { Box } from 'components/Box/Box';\nimport { Button } from 'components/Button/Button';\nimport { Loader } from 'components/Loader/Loader';\nimport { GalleryList, Item, Link } from './SearchGallery.styled';\nimport { SmallMovieCard } from 'components/SmallMovieCard/SmallMovieCard';\n\nexport const SearchGallery = ({ searchMovie, page, changePage }) => {\n  const [movies, setMovies] = useState(null);\n  const [totalMovies, setTotalMovies] = useState(0);\n  const [isLoad, setIsLoad] = useState(false);\n  const [isShowGallery, setIsShowGallery] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsShowGallery(false);\n  }, [searchMovie]);\n\n  useEffect(() => {\n    if (searchMovie === '') {\n      setIsShowGallery(false);\n      setTotalMovies(0);\n      setMovies(null);\n      return;\n    }\n\n    async function fetchAPI() {\n      try {\n        setIsLoad(true);\n        const { results, total_results } = await fetchSearchFilms(\n          searchMovie,\n          page\n        );\n\n        if (results.length === 0) {\n          toast.error('Sorry, no resault for your search');\n\n          setIsShowGallery(false);\n          setTotalMovies(0);\n          setMovies(null);\n          return;\n        }\n\n        if (page !== 1) {\n          setMovies(state => [...state, ...results]);\n          setIsShowGallery(true);\n\n          setTimeout(() => {\n            makeSmoothScroll();\n          }, 300);\n          return;\n        }\n\n        setMovies(results);\n        setTotalMovies(total_results);\n        setIsShowGallery(true);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setIsLoad(false);\n      }\n    }\n\n    fetchAPI();\n  }, [page, searchMovie]);\n\n  if (movies === null) {\n    return null;\n  }\n\n  const totalPages = Math.ceil(totalMovies / 12);\n\n  if (searchMovie === '') {\n    return (\n      <Box display=\"flex\" justifyContent=\"center\" as=\"h1\">\n        Enter key word from movie search!\n      </Box>\n    );\n  }\n\n  return (\n    <>\n      {isShowGallery && (\n        <Box display=\"flex\" flexDirection=\"column\" justifyContent=\"center\">\n          <GalleryList>\n            {movies.map(({ id, title, poster_path }) => (\n              <Item key={id}>\n                <Link to={`${id}`} state={{ from: location }}>\n                  <SmallMovieCard id={id} title={title} poster={poster_path} />\n                </Link>\n              </Item>\n            ))}\n          </GalleryList>\n          {totalMovies > 20 && totalPages !== page && !isLoad && (\n            <Button text=\"Load more\" onClick={changePage} />\n          )}\n        </Box>\n      )}\n      {isLoad && <Loader />}\n    </>\n  );\n};\n\nSearchGallery.propTypes = {\n  searchMovie: PropTypes.string.isRequired,\n  page: PropTypes.number.isRequired,\n  changePage: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { SearchGallery } from 'components/SearchGallery/SearchGallery';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n    const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('query') ?? '';\n  \n  \t  useEffect(() => {\n        setQuery(movieName);\n      }, [movieName]);\n\n  const handleFormSubmit = searchMovie => {\n    setQuery(searchMovie);\n    setCurrentPage(1);\n\n    const nextParams = searchMovie !== '' ? { query: searchMovie } : {};\n    setSearchParams(nextParams);\n  };\n\n  const changePage = () => {\n    setCurrentPage(state => state + 1);\n  };\n\n  return (\n    <div>\n      <Searchbar onFormSubmit={handleFormSubmit} />\n      <SearchGallery\n        searchMovie={query}\n        page={currentPage}\n        changePage={changePage}\n      />\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["Container","styled","SearchForm","SearchBtn","Input","Searchbar","onFormSubmit","useState","searchMovie","setSearchMovie","onSubmit","event","preventDefault","trim","toast","currentTarget","reset","type","autocomplete","name","autoFocus","placeholder","onChange","value","toLowerCase","GalleryList","Item","Link","NavLink","SearchGallery","page","changePage","movies","setMovies","totalMovies","setTotalMovies","isLoad","setIsLoad","isShowGallery","setIsShowGallery","location","useLocation","useEffect","fetchSearchFilms","results","total_results","length","state","setTimeout","makeSmoothScroll","console","log","fetchAPI","totalPages","Math","ceil","Box","display","justifyContent","as","flexDirection","map","id","title","poster_path","to","from","SmallMovieCard","poster","Button","text","onClick","Loader","query","setQuery","currentPage","setCurrentPage","useSearchParams","searchParams","setSearchParams","movieName","get"],"sourceRoot":""}